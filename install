# Copyright (C) 2020 Allan Leal

#------------------------------------------------------------------------------
# Note
#------------------------------------------------------------------------------
# This script can be executed from anywhere because of the use of
# CMAKE_CURRENT_LIST_DIR to detect the path to this install cmake script.
#------------------------------------------------------------------------------

# Set the cmake module path of the script
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

# Include this CMake module to output colored text messages
include(ColoredText)

# Set the build type to Release by default, if not provided
if(NOT DEFINED BUILD_TYPE)
    set(BUILD_TYPE Release)
endif()

# Set the build path variable BUILD_PATH
if(NOT DEFINED BUILD_PATH)
    set(BUILD_PATH ${CMAKE_CURRENT_LIST_DIR}/build)  # Set BUILD_PATH to rootdir/build if not provided.
endif()

# Set the install path variable INSTALL_PATH
if(NOT DEFINED PREFIX)
    set(INSTALL_PATH ${BUILD_PATH}/install)  # Set INSTALL_PATH to rootdir/build/install if not provided via PREFIX
else()
    set(INSTALL_PATH ${PREFIX})  # Set INSTALL_PATH to the given PREFIX cmake argument
endif()

# Set the PYTHON variable to ON by default to ensure Python bindings are built
if(NOT DEFINED PYTHON)
    set(PYTHON ON)
endif()

# Configure the building and installation of the project
execute_process(COMMAND
    ${CMAKE_COMMAND} -S ${CMAKE_CURRENT_LIST_DIR} -B ${BUILD_PATH}
        -DOPTIMA_BUILD_PYTHON=${PYTHON}
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX=${INSTALL_PATH})

# Build and install the library
execute_process(COMMAND
    ${CMAKE_COMMAND} --build ${BUILD_PATH} --parallel --target install)

# Print a summary of the installation
message("${BoldCyan}")
message("====================================================================================================")
message("Summary")
message("====================================================================================================${ColourReset}")
message("The library was built in ${BoldBlue}${BUILD_TYPE}${ColourReset} mode in:")
message("    ${BoldYellow}${BUILD_PATH}${ColourReset}")
message("The library was installed in:")
message("    ${BoldYellow}${INSTALL_PATH}${ColourReset}")
message("${BoldCyan}----------------------------------------------------------------------------------------------------")
message("How do I change the default build and install paths and build type?")
message("----------------------------------------------------------------------------------------------------${ColourReset}")
message("Change the default build path to an ${BoldBlue}absolute path${ColourReset} <build-dir> by executing:")
message("    ${BoldYellow}cmake -DBUILD_PATH=<build-dir> -P install${ColourReset}")
message("Change the default build type from Release to Debug by executing:")
message("    ${BoldYellow}cmake -DBUILD_TYPE=Debug -P install${ColourReset}")
message("Change the default install path to an ${BoldBlue}absolute path${ColourReset} <install-dir> by executing:")
message("    ${BoldYellow}cmake -DPREFIX=<install-dir> -P install${ColourReset}")
message("Linux and macOS users might want to install in a system directory, for example:")
message("    ${BoldYellow}cmake -DPREFIX=/usr/local -P install${ColourReset}")
message("${BoldCyan}----------------------------------------------------------------------------------------------------")
message("*** The above summary assumes a successfull build/installation process for all components ***")
message("====================================================================================================")
message("${ColourReset}")
